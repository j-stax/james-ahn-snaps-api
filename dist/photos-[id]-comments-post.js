!function(t,e){for(var r in e)t[r]=e[r]}(exports,function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=6)}([function(t,e){t.exports=require("fs")},function(t,e){t.exports=require("crypto")},,,,,function(t,e,r){"use strict";r.r(e),r.d(e,"handler",(function(){return m}));var n=r(0),o=r.n(n),i=r(1),a=r.n(i);const u=new Uint8Array(256);let s=u.length;function f(){return s>u.length-16&&(a.a.randomFillSync(u),s=0),u.slice(s,s+=16)}var c=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;var d=function(t){return"string"==typeof t&&c.test(t)};const l=[];for(let t=0;t<256;++t)l.push((t+256).toString(16).substr(1));var p=function(t,e=0){const r=(l[t[e+0]]+l[t[e+1]]+l[t[e+2]]+l[t[e+3]]+"-"+l[t[e+4]]+l[t[e+5]]+"-"+l[t[e+6]]+l[t[e+7]]+"-"+l[t[e+8]]+l[t[e+9]]+"-"+l[t[e+10]]+l[t[e+11]]+l[t[e+12]]+l[t[e+13]]+l[t[e+14]]+l[t[e+15]]).toLowerCase();if(!d(r))throw TypeError("Stringified UUID is invalid");return r};var y=function(t,e,r){const n=(t=t||{}).random||(t.rng||f)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,e){r=r||0;for(let t=0;t<16;++t)e[r+t]=n[t];return e}return p(n)};const m=async t=>{try{const{id:e}=t.pathParameters,{name:r,comment:n}=t.pathParameters.body,i=await JSON.parse(o.a.promises.readFile("./data/photos.json","utf-8"));if(i.find(t=>t.id===e)){const t={name:r,comment:n,id:y(),timestamp:Date.now()};return i.forEach(r=>{r.id===e&&r.comments.push(t)}),await o.a.promises.writeFile("./data/photos.json",i),{statusCode:201,body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}}return{statusCode:404,body:JSON.stringify({message:`Data not found for photo ID ${e}.`})}}catch(t){return{statusCode:500,body:JSON.stringify({message:"Error reading photos."})}}}}]));